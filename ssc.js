// Generated by LiveScript 1.6.0
(function(){
  var stream, execSync, fs, args, setting, i$, len$, arg, ref$, key, val, output;
  stream = require("./index");
  execSync = require("child_process").execSync;
  fs = require('fs');
  args = process.argv.slice(2);
  setting = {
    input: "index.stream",
    output: false,
    target: "js",
    module: "yes",
    setting: false
  };
  for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {
    arg = args[i$];
    ref$ = arg.split("="), key = ref$[0], val = ref$[1];
    setting[key] = val;
  }
  if (typeof setting.setting === "string") {
    setting = JSON.parse(fs.readFileSync(setting.setting).toString());
  }
  output = "";
  if (!setting.output) {
    stream.runStream(fs.readFileSync(setting.input).toString());
  } else {
    console.log("Building Now");
    if (setting.module === "yes") {
      output = "(async function(){" + fs.readFileSync(__dirname + "/index.js").toString() + "retv = {}(await runStream(`" + fs.readFileSync(setting.input).toString() + "`)).forEach( ( value, key ) => {retv[ key ] = value});return retv})()";
    } else {
      output = "" + fs.readFileSync(__dirname + "/index.js").toString() + "runStream(`" + fs.readFileSync(setting.input).toString() + "`)";
    }
    fs.writeFileSync(setting.output, output);
    console.log("Build Succeed");
    if (setting.target === "bin") {
      console.log("Compiling Now");
      fs.rename(setting.output, "_" + setting.output);
      execSync("qjsc _" + setting.output + " -o " + setting.output);
      fs.unlinkSync("_" + setting.output);
      console.log("Compile Succeed");
    }
  }
}).call(this);
